---
title: "Data Browser"
---

{{< include _load-data.qmd >}}

Below we show metadata for the entire IRW which can be used to help identify datasets of potential interest. Individual datasets can then be further explored via the selection mentu below. You can also explore the data [here](https://redivis.com/datasets/as2e-cv7jb41fd/tables).

## Metadata

<iframe width="800" height="500" allowfullscreen src="https://redivis.com/embed/tables/bdomingu.irw_meta:bdxt:current.metadata:h5gs#cells" style="border:0;"></iframe>

## Individual dataset

```{ojs}
function createDatasetMap(df) {
  let datasetMap = new Map();

  // Convert column-based object into an array of row objects
  let dataArray = Array.from({ length: df[Object.keys(df)[0]].length }, (_, i) => {
    return Object.fromEntries(Object.entries(df).map(([key, values]) => [key, values[i]]));
  });

  // Populate the Map using filename as the key
  for (let row of dataArray) {
    datasetMap.set(row.dataset_name, row); // Ensure 'filename' exists in the metadata
  }

  return datasetMap;
}

// Convert metadata table into datasetMap
dataset_map = createDatasetMap(metadata);

// Dropdown selector for dataset
viewof dataset = Inputs.select(dataset_map, { label: 'Dataset' });

// Function to find dataset name from the Map
function findDatasetNameFromMap(map, selectedDataset) {
  for (let [key, value] of map.entries()) {
    if (value === selectedDataset) {
      return key;
    }
  }
  return null;
}

// Look up the name of the dataset and construct the URL
dataset_name = findDatasetNameFromMap(dataset_map, dataset);
dataset_url = `https://redivis.com/embed/tables/datapages.item_response_warehouse:as2e:current.${dataset_name}`;

html`<iframe id="myIframe" width="800" height="500" allowfullscreen style="border:0;" src = "${dataset_url}"></iframe>`
```

