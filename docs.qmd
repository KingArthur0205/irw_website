---
title: "Data documentation"
---
Click on each dataset's name to see its description, license, citation, and link to its original source. Code used to create these data can be found [here](https://github.com/ben-domingue/irw/tree/main/data).
```{r}
library(dplyr)
library(purrr)
library(readr)
library(stringr)
library(glue)
data_index <- read_csv("data/IRW Data Dictionary - data index.csv",
                       na = character()) |>
  select(dataset = Filename, url = URL, license = `Derived License`,
         description = Description, reference = Reference, doi = DOI) |>
  mutate(dataset = str_remove(dataset, ".R.ata$"))
```

```{=html}
<input type="text" id="searchBar" placeholder="Search datasets..." style="width: 100%; padding: 10px; margin-bottom: 20px; font-size: 16px;">
<script>
function searchDatasets() {
  var input = document.getElementById('searchBar');
  var filter = input.value.toLowerCase();
  var items = document.getElementsByClassName('dataset-item');
  
  for (var i = 0; i < items.length; i++) {
    var text = items[i].textContent || items[i].innerText;
    items[i].style.display = text.toLowerCase().indexOf(filter) > -1 ? '' : 'none';
  }
}

async function getCitation(doi, buttonId, targetId) {
  const button = document.getElementById(buttonId);
  button.disabled = true;
  button.textContent = 'Done';
  
  try {
    const response = await fetch(`https://doi.org/${doi}`, {
      headers: {
        'Accept': 'application/x-bibtex'
      }
    });
    
    if (!response.ok) {
      throw new Error('Failed to fetch citation');
    }
    
    const citation = await response.text();
    const target = document.getElementById(targetId);
    target.textContent = citation;
    target.style.display = 'block';
    
  } catch (error) {
    console.error('Error fetching citation:', error);
    const target = document.getElementById(targetId);
    target.textContent = 'Error fetching citation. Please try again.';
    target.style.display = 'block';
    button.disabled = false;
    button.textContent = 'Get BibTex';
  }
}

document.getElementById('searchBar').addEventListener('input', searchDatasets);
</script>

<style>
.citation-text {
  display: none;
  margin-top: 10px;
  padding: 10px;
  background-color: #f5f5f5;
  border-radius: 4px;
  font-family: monospace;
  white-space: pre-wrap;
}

.citation-button {
  background-color: #007bff;
  color: white;
  border: none;
  padding: 5px 10px;
  border-radius: 4px;
  cursor: pointer;
  margin-top: 10px;
}

.citation-button:disabled {
  background-color: #cccccc;
  cursor: not-allowed;
}
</style>
```

```{r}
#| results: asis
el <- function(ds) {
  lic <- if (ds$license != "") glue("({ds$license})") else ""
  doi_button <- if (!is.na(ds$doi) && ds$doi != "") {
    button_id <- paste0("cite-button-", make.names(ds$dataset))
    target_id <- paste0("cite-text-", make.names(ds$dataset))
    glue('
    <button id="{button_id}" class="citation-button" onclick="getCitation(\'{ds$doi}\', \'{button_id}\', \'{target_id}\')">
      Get Citation
    </button>
    <div id="{target_id}" class="citation-text"></div>
    ')
  } else ""
  
  glue(
  "
  ::: {{.g-col-4 .dataset-item}}
  
  ::: {{.callout-note collapse='true'}}
  ## {ds$dataset}
  
  {ds$description} {lic} [[link]]({ds$url})
  
  <i>{ds$reference}</i>
  
  {doi_button}
  :::
  
  :::
  "
  )
}
els <- transpose(data_index) |> map(el) |> paste(collapse = "\n")
cat(glue(
  "
  ::: {{.grid}}
  {els}
  :::
  "
))
```